-- date_filter
{% set var_date_filter = "AND (const_date >= CAST(" +  filter_values('date_filter_start') [0] | string + " / 1000 AS DATE)
                         AND const_date <= CAST(" + filter_values('date_filter_end') [0] | string + "/ 1000 AS DATE)) "
                         if (filter_values('date_filter_start') != []) and (filter_values('date_filter_end') != []) else "  "%}

-- category_comp_leftjoin
{% set var_category_comp_leftjoin = "LEFT JOIN dbt.tr1_product_mapping tpm ON tpm.id = trim(d.store_matchid)"
                                    if ((filter_values('c.category1') != []) or (filter_values('category_comp') != []) or (filter_values('category2_comp') != []) or (filter_values('size_comp') != []) or (filter_values('c.brand') != []) or (filter_values('SKUSize') != []))
                                    else "  "%}

{% set and_in_filter = {
        "var_c_cateogry1_filter": {'column': 'upper(tpm.category1)', 'filter': 'c.category1'}
        "var_category_comp_filter": {'column': 'tpm.category_comp', 'filter': 'category_comp'}
        "var_category2_comp_filter": {'column': 'tpm.category2_comp', 'filter': 'category2_comp'}
        "var_size_comp_filter": {'column': 'tpm.size_comp', 'filter': 'size_comp'}
        "var_custom_category1_filter": {'column': 'tcs.custom_category1', 'filter': 'custom_category1'}
        "var_c_brand_filter": {'column': 'tpm.brand', 'filter': 'c.brand'}
        "var_SKUSize_filter": {'column': "CONCAT(tpm.jid, ' (', tpm.size, ')' )", 'filter': 'SKUSize'}
        "var_d_province_filter": {'column': 'p.province_avail', 'filter': 'd.province'}
        "var_c_category1_filter2": {'column': 'upper(m.category1)', 'filter': 'c.category1'}
        "var_category_comp_filter2": {'column': 'm.category_comp', 'filter': 'category_comp'}
        "var_category2_comp_filter2": {'column': 'm.category2_comp', 'filter': 'category2_comp'}
        "var_size_comp_filter2": {'column': 'm.size_comp', 'filter': 'size_comp'}
        "var_c_brand_filter2": {'column': 'm.brand', 'filter': 'c.brand'}
        "var_SKUSize_filter2": {'column': "CONCAT(m.jid, ' (', m.size, ')' )", 'filter': 'SKUSize'}
} %}

{% set quote_control = ["var_c_brand_filter", "var_SKUSize_filter", "var_c_brand_filter2", "var_SKUSize_filter2"] %}

{% set store_total_filtered_where = ["var_c_category1_filter", "var_category_comp_filter", "var_category2_comp_filter", "var_size_comp_filter", "var_c_brand_filter", "var_SKUSize_filter"] %}

{% set all_total_where = ["var_d_province_filter", "var_c_category1_filter2", "var_category_comp_filter2", "var_category2_comp_filter2", "var_size_comp_filter2", "var_c_brand_filter2", "var_c_brand_filter2"] %}

{% set daily_where = ["var_c_category1_filter", "var_category_comp_filter", "var_category2_comp_filter", "var_size_comp_filter", "var_custom_category1_filter", "var_c_brand_filter", "var_SKUSize_filter"] %}

{% set situation_2_where = ["var_c_category1_filter", "var_category_comp_filter", "var_category2_comp_filter", "var_size_comp_filter", "var_custom_category1_filter", "var_c_brand_filter", "var_SKUSize_filter"]%}
      
-- daily sit1

-- c.category1_leftjoin
{% set var_c_category_leftjoin = "  "%}
{%- if ((filter_values('c.category1') != []) or (filter_values('category_comp') != []) or (filter_values('category2_comp') != []) or (filter_values('size_comp') != []) or (filter_values('c.brand') != []) or (filter_values('SKUSize') != []))  -%}
{% set var_c_category_leftjoin = "LEFT JOIN dbt.tr1_product_mapping tpm ON tpm.id = trim(h.store_matchid)" %} 
{%- endif -%} 
    
-- custom_category1_leftjoin
{% set var_custom_category1_leftjoin = "  "%}
{%- if filter_values('custom_category1') != [] -%}
{% set var_custom_category1_leftjoin = "LEFT JOIN dbt.tr1_client_skus tcs ON tcs.prodsizes_id = h.store_matchid AND tcs.client_code = h.clientcode" %}   
{%- endif -%}


-- Metric Aggregate

{% set metric_type = filter_values('metric_type')[0] if filter_values('metric_type') else '' %}

{% set metric_aggregates = {
    'Min': {'totalSkus': 'MIN(totalSkus)', 'totalCompetSkus': 'MIN(totalCompetSkuss)'},
    'Average': {'totalSkus': 'AVG(totalSkus)', 'totalCompetSkus': 'AVG(totalCompetSkus)'},
    'Peak': {'totalSkus': 'MAX(totalSkus)', 'totalCompetSkus': 'MAX(totalCompetSkus)'}
} %}

{% set metric_aggregate_totalSkus = metric_aggregates[metric_type]['totalSkus'] if metric_type in metric_aggregates else '' %}
{% set metric_aggregate_totalCompetSkus = metric_aggregates[metric_type]['totalCompetSkus'] if metric_type in metric_aggregates else '' %}

{% set metric_type_is_null = ',totalSkus,totalCompetSkus' if not metric_type else '' %}

-- Query

WITH client_filter AS (
    SELECT DISTINCT(clientcode) clientcode
    FROM stage.tr1_clientcode_mapping
    WHERE username = '{{ current_username() }}'
),

store_total AS (
    SELECT store_id, COUNT(DISTINCT(store_matchid)) AS store_sku
    FROM dbt.tr1_mvp_history2_distro d
    WHERE d.store_id IS NOT NULL
        AND store_matchid IS NOT NULL
        AND store_matchid != ''

        {{ var_date_filter }}

        AND const_date >= CAST('2023-01-01' AS DATE)
    GROUP BY store_id
),

store_total_filtered AS (
    SELECT store_id, COUNT(DISTINCT(store_matchid)) AS store_sku_filtered
    FROM dbt.tr1_mvp_history2_distro d
   
    {{ var_category_comp_leftjoin }}

    WHERE d.store_id IS NOT NULL
        AND store_matchid IS NOT NULL
        AND store_matchid != ''
    	{{ var_date_filter }}
        {% for var, value in and_in_filter.items() %}
            {% set filtered_values = filter_values(value['filter']) %}
            {% if var in store_total_filtered_where and filtered_values %}
                {% set column = value['column'] %}
                {% if column not in quote_control %}
                    AND {{ column }} IN ('{{ filtered_values|join("','") }}')
                {% elif value[category] in quote_control %}
                    AND {{ column }} IN ('{{ filtered_values|join("','")|replace("'", "''")|replace("'',''", "','") }}')
                {% endif %}
            {% endif %}
        {% endfor %}

        AND const_date >= CAST('2023-01-01' AS DATE)
    GROUP BY store_id
),

all_total AS (
    SELECT c.clientcode as clientcode,
        COUNT(DISTINCT(m.id)) AS client_sku
    FROM dbt.tr1_available_provinces p
    INNER JOIN stage.tr1_clients c
        ON trim(c.matchid) = trim(p.matchid_avail)
    LEFT JOIN dbt.tr1_product_mapping m
        ON m.id = trim(c.matchid)
    WHERE c.matchid != '' 
        AND c.matchid IS NOT NULL
        AND c.clientcode != ''
        AND c.clientcode IS NOT NULL
    	AND c.client_type != 'inactive'
        {% for var, value in and_in_filter.items() %}
            {% set filtered_values = filter_values(value['filter']) %}
            {% if var in all_total_where and filtered_values %}
                {% set column = value['column'] %}
                {% if column not in quote_control %}
                    AND {{ column }} IN ('{{ filtered_values|join("','") }}')
                {% elif value[category] in quote_control %}
                    AND {{ column }} IN ('{{ filtered_values|join("','")|replace("'", "''")|replace("'',''", "','") }}')
                {% endif %}
            {% endif %}
        {% endfor %}
    GROUP BY c.clientcode
)


{%- if (filter_values('metric_type')[0] == 'Peak') or (filter_values('metric_type')[0] == 'Average') or (filter_values('metric_type')[0] == 'Min') -%}
-- Situation 1: Metric Type is Peak / Average / Min

,
daily AS (
    select
        `const_date` `const_date`,
        COUNT(DISTINCT(CASE WHEN `product_jid` LIKE 'zz_%' THEN NULL ELSE `product_id` END)) `totalSkus`,
        COUNT(DISTINCT(CASE WHEN `product_jid` LIKE 'zz_%' THEN `product_id` ELSE NULL END)) `totalCompetSkus`,
        `store_city`,
        `store_storename`,
        `store_address`,
        `store_postal_code`,
        `store_province`,
        `store_storeid`,
        h.clientcode `clientcode`,
        account_rep,
        h.custom_attribute1 `custom_attribute1`,
        h.custom_attribute2 `custom_attribute2`
    from
        dbt.tr1_prod_history2_distro h
    INNER JOIN client_filter c
        ON c.clientcode = h.clientcode
    
    {{var_c_category_leftjoin}}
    {{var_custom_category1_leftjoin}}
    
    WHERE
        store_storeid != '' 
        AND product_id != '' 
        {% for var, value in and_in_filter.items() %}
            {% set filtered_values = filter_values(value['filter']) %}
            {% if var in daily_where and filtered_values %}
                {% set column = value['column'] %}
                {% if column not in quote_control %}
                    AND {{ column }} IN ('{{ filtered_values|join("','") }}')
                {% elif value[category] in quote_control %}
                    AND {{ column }} IN ('{{ filtered_values|join("','")|replace("'", "''")|replace("'',''", "','") }}')
                {% endif %}
            {% endif %}
        {% endfor %}
        AND const_date >= CAST('2023-01-01' AS DATE) 

    GROUP BY
        const_date,
        store_city,
        store_storename,
        store_address,
        `store_postal_code`,
        store_province,
        store_storeid,
        clientcode,
        account_rep,
        custom_attribute1,
        custom_attribute2
)

SELECT 
    `store_province` `d.province`,
    `store_city` `d.city`,
    `store_address` `d.address`,
	`store_postal_code` `d.postalcode`,
    `store_storeid` `d.storeid`,
    `store_storename` `d.storename`,
    a.clientcode `clientcode`,
    {{ metric_aggregate_totalSkus }} `sku_count`,
    {{ metric_aggregate_totalCompetSkus }} `compet_sku_count`,
    MAX(st.store_sku) `store_sku`,
    MAX(stf.store_sku_filtered) `store_sku_filtered`,
    MAX(att.client_sku) `client_sku`,
    tcst.account_rep `account_rep`,
    tcst.custom_attribute1 `custom_attribute1`,
    tcst.custom_attribute2 `custom_attribute2`

FROM daily a
LEFT JOIN dbt.tr1_client_stores tcst ON tcst.address = a.store_address and a.clientcode = tcst.client_code_store
LEFT JOIN store_total st
    ON st.store_id = a.store_storeid
LEFT JOIN store_total_filtered stf
    ON stf.store_id = a.store_storeid
LEFT JOIN all_total att
    ON att.clientcode = a.clientcode
GROUP BY
    d.province,
    d.city,
    d.address,
	d.postalcode,
    d.storeid,
    d.storename,
    account_rep,
    a.clientcode,
    custom_attribute1,
    custom_attribute2
    {{ metric_type_is_null }}

{%- endif -%}  



{%- if (filter_values('metric_type') == []) or (filter_values('metric_type')[0] == 'Cumulative') -%}
-- Situation 2: Metric Type is Null / Cumulative


    SELECT
        COUNT(DISTINCT(CASE WHEN `product_jid` LIKE 'zz_%' THEN NULL ELSE `product_id` END)) `sku_count`,
        COUNT(DISTINCT(CASE WHEN `product_jid` LIKE 'zz_%' THEN `product_id` ELSE NULL END)) `compet_sku_count`,
        `store_province` `d.province`,
        `store_city` `d.city`,
        `store_address` `d.address`,
	    `store_postal_code` `d.postalcode`,
        `store_storeid` `d.storeid`,
        `store_storename` `d.storename`,
        h.clientcode `clientcode`,
        MAX(st.store_sku) `store_sku`,
        MAX(stf.store_sku_filtered) `store_sku_filtered`,
        MAX(att.client_sku) `client_sku`,
        tcst.account_rep `account_rep`,
        tcst.custom_attribute1 `custom_attribute1`,
        tcst.custom_attribute2 `custom_attribute2`
    FROM
        dbt.tr1_prod_history2_distro h
    INNER JOIN client_filter c
        ON c.clientcode = h.clientcode

    
    {{var_custom_category1_leftjoin}}

    LEFT JOIN dbt.tr1_client_stores tcst ON tcst.address = h.store_address  and h.clientcode = tcst.client_code_store
    LEFT JOIN store_total st
        ON st.store_id = h.store_storeid
    LEFT JOIN store_total_filtered stf
        ON stf.store_id = h.store_storeid
    LEFT JOIN all_total att
        ON att.clientcode = h.clientcode
    
    {{var_c_category_leftjoin}}

    WHERE
        store_storeid != '' 
        AND product_id != '' 
        {% for var, value in and_in_filter.items() %}
            {% set filtered_values = filter_values(value['filter']) %}
            {% if var in situation_2_where and filtered_values %}
                {% set column = value['column'] %}
                {% if column not in quote_control %}
                    AND {{ column }} IN ('{{ filtered_values|join("','") }}')
                {% elif value[category] in quote_control %}
                    AND {{ column }} IN ('{{ filtered_values|join("','")|replace("'", "''")|replace("'',''", "','") }}')
                {% endif %}
            {% endif %}
        {% endfor %}
        AND const_date >= CAST('2023-01-01' AS DATE)         

    GROUP BY
        store_city,
        store_storename,
        store_address,
	    `store_postal_code`,
        store_province,
        store_storeid,
        clientcode,
        account_rep,
        custom_attribute1,
        custom_attribute2
    {%- endif -%}

-- end